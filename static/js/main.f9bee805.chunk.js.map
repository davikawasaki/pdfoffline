{"version":3,"sources":["withRoot.js","components/ModalLoadingAlert/ModalLoadingAlert.js","services/PDFService.js","components/FilesDragDrop/FilesDragDrop.js","pages/index.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","indigo","main","dark","secondary","red","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","core_styles","CssBaseline_default","rand","Math","round","random","getModalStyle","top","left","concat","transform","ModalLoadingAlert","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOpen","setState","open","handleClose","handleCloseAfterUpload","loading","modalQuery","msg","err","success","respMsg","filesClearAndRemoveAll","handleLoadingProgress","handleResponseProgress","type","handleIdleProgress","state","isOpen","isLoading","clearModalStatus","nextProps","hasOwnProperty","classes","Modal_default","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","aria-describedby","onClose","style","className","paper","Grid_default","container","spacing","justify","item","Typography_default","Button_default","variant","color","onClick","Fade_default","in","transitionDelay","unmountOnExit","CircularProgress_default","ModalLoadingAlertWrapped","React","withStyles","position","width","unit","backgroundColor","background","boxShadow","shadows","padding","outline","textAlign","PDFService","mergeBetweenPDF","pdfFileList","returnObj","pdfFile","pdfNotMergedList","length","FileReader","onload","evt","console","log","target","result","pdfDoc","PDFDocumentFactory","create","iterPdfDoc","pdfFilePromiseArrayBufferList","iterPdfDocPages","forEach","push","fetch","URL","createObjectURL","then","res","arrayBuffer","Promise","all","pdfArrayBufferFileList","i","load","Uint8Array","getPages","pdfPage","addPage","name","PDFDocumentWriter","saveToBytes","catch","FilesDragDrop","files","hasFiles","modalOpen","modalLoading","modalMsg","onFilesChange","onFilesError","error","file","code","message","filesRemoveOne","refs","removeFile","filesRemoveAll","removeFiles","startMerge","tempMsg","fileName","Date","toISOString","replace","saveSync","join","finally","_this2","dropFilesGridZone","dist_default","ref","dropFilesZone","onChange","onError","accepts","multiple","maxFiles","maxFileSize","minFileSize","clickable","dropFilesZoneDiv","map","key","id","sizeReadable","bind","dropFilesWarningGridZone","disabled","components_ModalLoadingAlert_ModalLoadingAlert","border","display","flexWrap","boxSizing","fontWeight","appBar","icon","marginRight","heroUnit","heroContent","maxWidth","margin","heroButtons","marginTop","layout","defineProperty","marginLeft","breakpoints","up","cardGrid","card","height","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","footer","Fragment","AppBar_default","Toolbar_default","noWrap","component","align","gutterBottom","components_FilesDragDrop_FilesDragDrop","Boolean","window","location","hostname","match","ReactDOM","render","pages","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9bee805.chunk.js","sourcesContent":["import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport indigo from '@material-ui/core/colors/indigo';\n// import green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: indigo[300],\n      main: indigo[500],\n      dark: indigo[700],\n    },\n    secondary: {\n      light: red[300],\n      main: red[500],\n      dark: red[700],\n    }\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: theme.spacing.unit * 50,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing.unit * 4,\r\n    outline: 'none',\r\n\ttextAlign: 'center'\r\n  },\r\n});\r\n\r\nclass ModalLoadingAlert extends React.Component {\r\n\tconstructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            open: props.isOpen ? props.isOpen : false,\r\n\t\t\tloading: props.isLoading,\r\n    \t\tmodalQuery: 'idle',\r\n\t\t\tmsg: props.msg,\r\n\t\t\trespMsg: null\r\n        }\r\n\t\tthis.filesClearAndRemoveAll = props.clearModalStatus\r\n    }\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\t// You don't have to do this check first, but it can help prevent an unneeded render\r\n\t\t// if (nextProps.startTime !== this.state.startTime) {\r\n\t\t//   this.setState({ startTime: nextProps.startTime });\r\n\t\t// }\r\n\t\tif (nextProps.hasOwnProperty(\"isOpen\") && nextProps.hasOwnProperty(\"isLoading\") && nextProps.hasOwnProperty(\"msg\")) {\r\n\t\t\t// console.log(nextProps)\r\n\t\t\tif (nextProps.isOpen) this.handleOpen()\r\n\t\t\t// else this.handleClose()\r\n\r\n\t\t\tif (nextProps.isLoading) this.handleLoadingProgress()\r\n\t\t\telse {\r\n\t\t\t\tif (nextProps.msg.err != null) this.handleResponseProgress('error', nextProps.msg.err)\r\n\t\t\t\telse if (nextProps.msg.success != null) this.handleResponseProgress('success', nextProps.msg.success)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpen = () => {\r\n\t\tthis.setState({ open: true });\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({ open: false });\r\n\t}\r\n\r\n\thandleCloseAfterUpload = () => {\r\n\t\tthis.setState({ open: false, loading: false, modalQuery: 'idle', msg: { err: null, success: null }, respMsg: null });\r\n\t\tthis.filesClearAndRemoveAll()\r\n\t}\r\n\r\n\thandleLoadingProgress = () => {\r\n\t\tthis.setState({ loading: true, modalQuery: 'progress' });\r\n\t}\r\n\r\n\thandleResponseProgress = (type, msg) => {\r\n\t\tthis.setState({ loading: false, modalQuery: type, respMsg: msg });\r\n\t}\r\n\r\n\thandleIdleProgress = () => {\r\n\t\tthis.setState({ loading: false, modalQuery: 'idle' });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t  <div>\r\n\t\t    <Modal\r\n\t\t\t  disableBackdropClick\r\n\t\t\t  disableEscapeKeyDown\r\n\t\t      aria-labelledby=\"simple-modal-title\"\r\n\t\t      aria-describedby=\"simple-modal-description\"\r\n\t\t      open={this.state.open}\r\n\t\t      onClose={this.handleClose}\r\n\t\t    >\r\n\t\t\t      \t<div style={getModalStyle()} className={classes.paper}>\r\n\t\t\t\t  \t{\r\n\t\t\t\t\t\tthis.state.modalQuery !== 'progress' ? (\r\n\t\t\t\t\t\t\t<Grid container spacing={32} justify=\"center\">\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Typography>{this.state.respMsg}</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t        <Grid item>\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleCloseAfterUpload}>\r\n\t\t\t\t\t\t\t\t\t\tNew merge\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t        </Grid>\r\n\t\t\t\t\t        </Grid>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t  \t<div>\r\n\t\t\t\t\t\t\t\t<Fade\r\n\t\t\t\t\t\t\t\t\tin={this.state.modalQuery === 'progress'}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t  transitionDelay: this.state.modalQuery === 'progress' ? '800ms' : '0ms',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tunmountOnExit\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t<Typography>Merging...</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t        <ModalLoadingAlertWrapped />\r\n\t\t      \t</div>\r\n\t\t    </Modal>\r\n\t\t  </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// We need an intermediary variable for handling the recursive nesting.\r\nconst ModalLoadingAlertWrapped = withStyles(styles)(ModalLoadingAlert);\r\n\r\nexport default ModalLoadingAlertWrapped;\r\n","import { PDFDocumentFactory, PDFDocumentWriter } from 'pdf-lib';\r\n\r\nfunction mergeBetweenPDF(pdfFileList) {\r\n\tlet returnObj = { pdfFile: null, pdfNotMergedList: [] }\r\n\r\n    if (pdfFileList.length > 0) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onload = function(evt) { console.log(evt.target.result); };\r\n\r\n\t\tconst pdfDoc = PDFDocumentFactory.create();\r\n\t\tlet iterPdfDoc = PDFDocumentFactory.create();\r\n\t\t// let iterPdfDocBytes;\r\n\t\tlet pdfFilePromiseArrayBufferList = [];\r\n\t\tlet pdfNotMergedList = [];\r\n\t\tlet iterPdfDocPages = [];\r\n\r\n\t\t// Get all file URLs into a list using Promises and fetch API\r\n\t\tpdfFileList.forEach((pdfFile) => {\r\n\t\t\t// console.log(pdfFile)\r\n\t\t\tpdfFilePromiseArrayBufferList.push(\r\n\t\t\t\tfetch(URL.createObjectURL(pdfFile))\r\n\t\t\t\t\t.then(res => res.arrayBuffer())\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\treturn Promise\r\n\t\t\t.all(pdfFilePromiseArrayBufferList)\r\n\t\t\t.then((pdfArrayBufferFileList) => {\r\n\t\t\t\tfor (let i = 0; i < pdfArrayBufferFileList.length; i++) {\r\n\t\t\t\t\t// console.log(pdfArrayBufferFileList[i])\r\n\t\t\t\t\t// iterPdfDocBytes = reader.readAsArrayBuffer(pdfBlob)\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\titerPdfDoc = PDFDocumentFactory.load(new Uint8Array(pdfArrayBufferFileList[i]))\r\n\t\t\t\t\t\titerPdfDocPages = iterPdfDoc.getPages()\r\n\t\t\t\t\t\titerPdfDoc = PDFDocumentFactory.create();\r\n\t\t\t\t\t\t// Add each page in a temp file to check if all pages from this PDF can be added in the final one\r\n\t\t\t\t\t\titerPdfDocPages.forEach((pdfPage) => {\r\n\t\t\t\t\t\t\titerPdfDoc.addPage(pdfPage)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t// No errors? Then add all pages to the final PDF\r\n\t\t\t\t\t\titerPdfDocPages.forEach((pdfPage) => {\r\n\t\t\t\t\t\t\tpdfDoc.addPage(pdfPage)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t\t\t// console.log(\"File \" + pdfFileList[i].name + \" not merged due to the following error: \" + err.message)\r\n\t\t\t\t\t\tpdfNotMergedList.push(pdfFileList[i].name)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturnObj.pdfFile = PDFDocumentWriter.saveToBytes(pdfDoc)\r\n\t\t\t\treturnObj.pdfNotMergedList = pdfNotMergedList\r\n\t\t\t\treturn returnObj\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\treturnObj.pdfFile = null\r\n\t\t\t\treturnObj.pdfNotMergedList = pdfNotMergedList\r\n\t\t\t\treturn returnObj\r\n\t\t\t})\r\n    }\r\n}\r\n\r\nexport default {\r\n\tmergeBetweenPDF\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import withRoot from '../../withRoot';\r\nimport ModalLoadingAlert from '../ModalLoadingAlert';\r\nimport Files from 'react-files';\r\nimport PDFService from '../../services/PDFService';\r\nimport { saveSync } from 'save-file'\r\n\r\nconst styles = theme => ({\r\n\tdropFilesGridZone: {\r\n\t\twidth: '70%'\r\n\t},\r\n\tdropFilesZone: {\r\n\t\tpadding: '2em',\r\n\t\tborder: '2px dashed rgba(0, 0, 0, .1)',\r\n\t\tcolor: 'rgba(0, 0, 0, .4)',\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\tboxSizing: 'border-box',\r\n\t\ttextAlign: 'center'\r\n\t},\r\n\tdropFilesZoneDiv: {\r\n\t\twidth: '100%'\r\n\t},\r\n\tdropFilesWarningGridZone: {\r\n\t\twidth: '70%',\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: 'red',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n});\r\n\r\nclass FilesDragDrop extends React.Component {\r\n  state = {\r\n\t  files: [],\r\n\t  hasFiles: false,\r\n\t  modalOpen: false,\r\n\t  modalLoading: false,\r\n\t  modalMsg: {\r\n\t\t  err: null,\r\n\t\t  success: null\r\n\t  }\r\n  }\r\n\r\n  onFilesChange = (files) => {\r\n      this.setState({\r\n          files,\r\n\t\t  hasFiles: files.length > 0 ? true : false\r\n      }, () => {\r\n          // console.log(this.state)\r\n      })\r\n\r\n      // this.setState({value: event.target.value}, function () {\r\n      //     console.log(this.state.value);\r\n      // });\r\n  }\r\n\r\n  onFilesError = (error, file) => {\r\n      console.log('[LOG] Error code ' + error.code + ': ' + error.message)\r\n  }\r\n\r\n  filesRemoveOne = (file) => {\r\n      this.refs.files.removeFile(file)\r\n  }\r\n\r\n  filesClearAndRemoveAll = () => {\r\n      this.setState({\r\n\t\t  modalOpen: false,\r\n\t\t  modalLoading: false,\r\n\t\t  modalMsg: {\r\n\t\t\t  err: null,\r\n\t\t\t  success: null\r\n\t\t  }\r\n      }, () => {\r\n\t\t  this.filesRemoveAll()\r\n      })\r\n  }\r\n\r\n  filesRemoveAll = () => {\r\n      this.setState({\r\n          files: [],\r\n\t\t  hasFiles: false\r\n      }, () => {\r\n\t\t  this.refs.files.removeFiles()\r\n      })\r\n  }\r\n\r\n  startMerge = () => {\r\n\t  let tempMsg\r\n\t  this.setState({\r\n          files: this.state.files,\r\n\t\t  hasFiles: false,\r\n\t\t  modalOpen: true,\r\n\t\t  modalLoading: true\r\n      }, () => {\r\n\t\t  // this.refs.modal.handleOpen()\r\n          console.log(\"[LOG] Starting merge...\")\r\n      })\r\n\r\n\t  PDFService.mergeBetweenPDF(this.state.files)\r\n\t  \t.then((res) => {\r\n\t\t\t// console.log(res)\r\n\t\t\tif (res && res.hasOwnProperty(\"pdfFile\")) {\r\n\t\t\t\tif (res.pdfFile) {\r\n\t\t\t\t\tif (res.pdfNotMergedList.length !== this.state.files.length) {\r\n\t\t\t\t\t\tconst fileName = \"output_merge_\" + new Date().toISOString().replace(\":\",\"_\").replace(\"T\",\"_\").replace(\"Z\",\"\") + \".pdf\"\r\n\t\t\t\t\t\tsaveSync(res.pdfFile, fileName)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (res.pdfNotMergedList.length > 0) {\r\n\t\t\t\t\t\tif (res.pdfNotMergedList.length > 0 && res.pdfNotMergedList.length === this.state.files.length) {\r\n\t\t\t\t\t\t\ttempMsg = \"No merge PDF output could be done. Following files have problem and need to be merged manually: \" + res.pdfNotMergedList.join(\", \")\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttempMsg = \"Following files have problem and need to be merged manually: \" + res.pdfNotMergedList.join(\", \")\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconsole.log(\"[LOG] \" + tempMsg)\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  \t\tmodalOpen: true,\r\n\t\t\t\t\t  \t\tmodalLoading: false,\r\n\t\t\t\t\t\t\tmodalMsg: {\r\n\t\t\t\t\t\t\t\terr: tempMsg,\r\n\t\t\t\t\t\t\t\tsuccess: null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t        }, () => { console.log(\"[LOG] Modal closed.\") })\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttempMsg = \"Merge totally successfull and downloaded!\"\r\n\t\t\t\t\t\tconsole.log(\"[LOG] \" + tempMsg)\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  \t\tmodalOpen: true,\r\n\t\t\t\t\t  \t\tmodalLoading: false,\r\n\t\t\t\t\t\t\tmodalMsg: {\r\n\t\t\t\t\t\t\t\terr: null,\r\n\t\t\t\t\t\t\t\tsuccess: tempMsg\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t        }, () => { console.log(\"[LOG] Closed modal\") })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttempMsg = \"Internal error at merging! Send this error to the developer in charge.\"\r\n\t\t\t\tconsole.log(tempMsg)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmodalOpen: true,\r\n\t\t\t\t\tmodalLoading: false,\r\n\t\t\t\t\tmodalMsg: {\r\n\t\t\t\t\t\terr: tempMsg,\r\n\t\t\t\t\t\tsuccess: null\r\n\t\t\t\t\t}\r\n\t\t\t\t}, () => { console.log(\"[LOG] Closed modal\") })\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(\"[LOG] \" + err)\r\n\t\t})\r\n\t\t.finally(() => this.filesRemoveAll())\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className=\"files\">\r\n        <Grid container spacing={32} justify=\"center\">\r\n          <Grid item className={classes.dropFilesGridZone}>\r\n            <Files\r\n\t\t\t  ref='files'\r\n              className={classes.dropFilesZone}\r\n              onChange={this.onFilesChange}\r\n              onError={this.onFilesError}\r\n              accepts={['.pdf']}\r\n              multiple\r\n              maxFiles={1000}\r\n              maxFileSize={10000000}\r\n              minFileSize={0}\r\n              clickable\r\n            >\r\n              <div className={classes.dropFilesZoneDiv}>Drop files here or click to upload</div>\r\n            </Files>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={32} justify=\"center\">\r\n          {\r\n            this.state.files.length > 0\r\n            ?\r\n\t\t\t<Grid item className={classes.dropFilesGridZone}>\r\n\t\t\t\t<div className='files-list'>\r\n\t              <ul>{this.state.files.map((file) =>\r\n\t                <li className='files-list-item' key={file.id}>\r\n\t                  <div className='files-list-item-content'>\r\n\t                    <div className='files-list-item-content-item files-list-item-content-item-1'>{file.name}</div>\r\n\t                    <div className='files-list-item-content-item files-list-item-content-item-2'>{file.sizeReadable}</div>\r\n\t                  </div>\r\n\t                  <div\r\n\t                    id={file.id}\r\n\t                    className='files-list-item-remove'\r\n\t                    onClick={this.filesRemoveOne.bind(this, file)} // eslint-disable-line\r\n\t                  />\r\n\t                </li>\r\n\t              )}</ul>\r\n\t            </div>\r\n\t\t\t</Grid>\r\n            :\r\n\t\t\t<Grid item className={classes.dropFilesWarningGridZone}>\r\n\t\t\t\t<div className='files-list'>\r\n\t            \tNo files selected!\r\n\t            </div>\r\n\t\t\t</Grid>\r\n          }\r\n        </Grid>\r\n\r\n        <Grid container spacing={16} justify=\"center\">\r\n\t        <Grid item>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\"\r\n\t\t\t\t\tdisabled={!this.state.hasFiles}\r\n\t\t\t\t\tonClick={this.startMerge}>\r\n\t\t\t\t\tStart merge\r\n\t\t\t\t</Button>\r\n\t        </Grid>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<Button variant=\"outlined\" color=\"secondary\" onClick={this.filesClearAndRemoveAll}>\r\n\t\t\t\t  \tClear selection\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n        </Grid>\r\n\r\n\t\t<ModalLoadingAlert\r\n\t\t\tisOpen={this.state.modalOpen}\r\n\t\t\tisLoading={this.state.modalLoading}\r\n\t\t\tmsg={this.state.modalMsg}\r\n\t\t\tclearModalStatus={this.filesClearAndRemoveAll} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { name: 'MuiFilesDragDrop' })(FilesDragDrop);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import classNames from 'classnames';\r\nimport AppBar from '@material-ui/core/AppBar';\r\n// import Button from '@material-ui/core/Button';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRoot from '../withRoot';\r\nimport FilesDragDrop from '../components/FilesDragDrop';\r\n\r\nconst styles = theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n  heroUnit: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  heroContent: {\r\n    maxWidth: 600,\r\n    margin: '0 auto',\r\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing.unit * 4,\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  cardGrid: {\r\n    padding: `${theme.spacing.unit * 8}px 0`,\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing.unit * 6,\r\n  },\r\n});\r\n\r\n// const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction Index(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            (YOUR LOGO IN HERE)\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroUnit}>\r\n          <div className={classes.heroContent}>\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n              Merge your PDFs\r\n            </Typography>\r\n            {\r\n              // <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\r\n              //   Something short and leading about the collection below—its contents, the creator, etc.\r\n              //   Make it short and sweet, but not too short so folks don&apos;t simply skip over it\r\n              //   entirely.\r\n              // </Typography>\r\n            }\r\n            <div className={classes.heroButtons}>\r\n              <FilesDragDrop>\r\n              </FilesDragDrop>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {\r\n          // <div className={classNames(classes.layout, classes.cardGrid)}>\r\n          //   {/* End hero unit */}\r\n          //   <Grid container spacing={40}>\r\n          //     {cards.map(card => (\r\n          //       <Grid item key={card} sm={6} md={4} lg={3}>\r\n          //         <Card className={classes.card}>\r\n          //           <CardMedia\r\n          //             className={classes.cardMedia}\r\n          //             image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\r\n          //             title=\"Image title\"\r\n          //           />\r\n          //           <CardContent className={classes.cardContent}>\r\n          //             <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          //               Heading\r\n          //             </Typography>\r\n          //             <Typography>\r\n          //               This is a media card. You can use this section to describe the content.\r\n          //             </Typography>\r\n          //           </CardContent>\r\n          //           <CardActions>\r\n          //             <Button size=\"small\" color=\"primary\">\r\n          //               View\r\n          //             </Button>\r\n          //             <Button size=\"small\" color=\"primary\">\r\n          //               Edit\r\n          //             </Button>\r\n          //           </CardActions>\r\n          //         </Card>\r\n          //       </Grid>\r\n          //     ))}\r\n          //   </Grid>\r\n          // </div>\r\n        }\r\n      </main>\r\n      {/* Footer */}\r\n      {\r\n        // <footer className={classes.footer}>\r\n        //   <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n        //     Footer\r\n        //   </Typography>\r\n        //   <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n        //     Something here to give the footer a purpose!\r\n        //   </Typography>\r\n        // </footer>\r\n      }\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nIndex.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRoot(withStyles(styles)(Index));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Index from './pages/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}