{"version":3,"sources":["config/theme.js","components/organism/ModalLoadingAlert/index.js","lib/provider/pdfProvider.js","components/organism/FilesDragDrop/index.js","components/pages/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["theme","palette","primary","light","indigo","main","dark","secondary","red","typography","useNextVariants","createMuiTheme","rand","Math","round","random","getModalStyle","top","left","concat","transform","ModalLoadingAlert","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOpen","setState","open","handleClose","handleCloseAfterUpload","loading","modalQuery","msg","err","success","respMsg","filesClearAndRemoveAll","handleLoadingProgress","handleResponseProgress","type","handleIdleProgress","state","isOpen","isLoading","clearModalStatus","nextProps","hasOwnProperty","classes","react_default","a","createElement","Modal_default","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","aria-describedby","onClose","style","className","paper","Grid_default","container","spacing","justify","item","Typography_default","Button_default","variant","color","onClick","Fade_default","in","transitionDelay","unmountOnExit","CircularProgress_default","ModalLoadingAlertWrapped","React","Component","withStyles","position","width","unit","backgroundColor","background","boxShadow","shadows","padding","outline","textAlign","pdfProvider","mergeBetweenPDF","pdfFileList","returnObj","pdfFile","pdfNotMergedList","length","FileReader","onload","evt","console","log","target","result","pdfDoc","PDFDocumentFactory","create","iterPdfDoc","pdfFilePromiseArrayBufferList","iterPdfDocPages","forEach","push","fetch","URL","createObjectURL","then","res","arrayBuffer","Promise","all","pdfArrayBufferFileList","i","load","Uint8Array","getPages","pdfPage","addPage","name","PDFDocumentWriter","saveToBytes","catch","FilesDragDrop","files","hasFiles","modalOpen","modalLoading","modalMsg","onFilesChange","onFilesError","error","file","code","message","filesRemoveOne","refs","removeFile","filesRemoveAll","removeFiles","startMerge","tempMsg","PDFProvider","fileName","Date","toISOString","replace","saveSync","join","finally","_this2","dropFilesGridZone","dist_default","ref","dropFilesZone","onChange","onError","accepts","multiple","maxFiles","maxFileSize","minFileSize","clickable","dropFilesZoneDiv","map","key","id","sizeReadable","bind","dropFilesWarningGridZone","disabled","organism_ModalLoadingAlert","border","display","flexWrap","boxSizing","fontWeight","appBar","icon","marginRight","heroUnit","heroContent","maxWidth","margin","heroButtons","marginTop","layout","defineProperty","marginLeft","breakpoints","up","cardGrid","card","height","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","footer","Fragment","AppBar_default","Toolbar_default","noWrap","component","align","gutterBottom","organism_FilesDragDrop","App","core_styles","CssBaseline_default","pages_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f581953.chunk.js","sourcesContent":["import { createMuiTheme} from '@material-ui/core/styles';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n// A theme with custom primary and secondary color.\r\n// It's optional.\r\nconst theme = {\r\n    palette: {\r\n        primary: {\r\n            light: indigo[300],\r\n            main: indigo[500],\r\n            dark: indigo[700],\r\n        },\r\n        secondary: {\r\n            light: red[300],\r\n            main: red[500],\r\n            dark: red[700],\r\n        }\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n};\r\n\r\nexport default createMuiTheme(theme);","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: theme.spacing.unit * 50,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing.unit * 4,\r\n    outline: 'none',\r\n\ttextAlign: 'center'\r\n  },\r\n});\r\n\r\nclass ModalLoadingAlert extends React.Component {\r\n\tconstructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            open: props.isOpen ? props.isOpen : false,\r\n\t\t\tloading: props.isLoading,\r\n    \t\tmodalQuery: 'idle',\r\n\t\t\tmsg: props.msg,\r\n\t\t\trespMsg: null\r\n        }\r\n\t\tthis.filesClearAndRemoveAll = props.clearModalStatus\r\n    }\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\t// You don't have to do this check first, but it can help prevent an unneeded render\r\n\t\t// if (nextProps.startTime !== this.state.startTime) {\r\n\t\t//   this.setState({ startTime: nextProps.startTime });\r\n\t\t// }\r\n\t\tif (nextProps.hasOwnProperty(\"isOpen\") && nextProps.hasOwnProperty(\"isLoading\") && nextProps.hasOwnProperty(\"msg\")) {\r\n\t\t\t// console.log(nextProps)\r\n\t\t\tif (nextProps.isOpen) this.handleOpen()\r\n\t\t\t// else this.handleClose()\r\n\r\n\t\t\tif (nextProps.isLoading) this.handleLoadingProgress()\r\n\t\t\telse {\r\n\t\t\t\tif (nextProps.msg.err != null) this.handleResponseProgress('error', nextProps.msg.err)\r\n\t\t\t\telse if (nextProps.msg.success != null) this.handleResponseProgress('success', nextProps.msg.success)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpen = () => {\r\n\t\tthis.setState({ open: true });\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({ open: false });\r\n\t}\r\n\r\n\thandleCloseAfterUpload = () => {\r\n\t\tthis.setState({ open: false, loading: false, modalQuery: 'idle', msg: { err: null, success: null }, respMsg: null });\r\n\t\tthis.filesClearAndRemoveAll()\r\n\t}\r\n\r\n\thandleLoadingProgress = () => {\r\n\t\tthis.setState({ loading: true, modalQuery: 'progress' });\r\n\t}\r\n\r\n\thandleResponseProgress = (type, msg) => {\r\n\t\tthis.setState({ loading: false, modalQuery: type, respMsg: msg });\r\n\t}\r\n\r\n\thandleIdleProgress = () => {\r\n\t\tthis.setState({ loading: false, modalQuery: 'idle' });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t  <div>\r\n\t\t    <Modal\r\n\t\t\t  disableBackdropClick\r\n\t\t\t  disableEscapeKeyDown\r\n\t\t      aria-labelledby=\"simple-modal-title\"\r\n\t\t      aria-describedby=\"simple-modal-description\"\r\n\t\t      open={this.state.open}\r\n\t\t      onClose={this.handleClose}\r\n\t\t    >\r\n\t\t\t      \t<div style={getModalStyle()} className={classes.paper}>\r\n\t\t\t\t  \t{\r\n\t\t\t\t\t\tthis.state.modalQuery !== 'progress' ? (\r\n\t\t\t\t\t\t\t<Grid container spacing={32} justify=\"center\">\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Typography>{this.state.respMsg}</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t        <Grid item>\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleCloseAfterUpload}>\r\n\t\t\t\t\t\t\t\t\t\tNew merge\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t        </Grid>\r\n\t\t\t\t\t        </Grid>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t  \t<div>\r\n\t\t\t\t\t\t\t\t<Fade\r\n\t\t\t\t\t\t\t\t\tin={this.state.modalQuery === 'progress'}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t  transitionDelay: this.state.modalQuery === 'progress' ? '800ms' : '0ms',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tunmountOnExit\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t<Typography>Merging...</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t        <ModalLoadingAlertWrapped />\r\n\t\t      \t</div>\r\n\t\t    </Modal>\r\n\t\t  </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// We need an intermediary variable for handling the recursive nesting.\r\nconst ModalLoadingAlertWrapped = withStyles(styles)(ModalLoadingAlert);\r\n\r\nexport default ModalLoadingAlertWrapped;\r\n","import { PDFDocumentFactory, PDFDocumentWriter } from 'pdf-lib';\r\n\r\nfunction mergeBetweenPDF(pdfFileList) {\r\nlet returnObj = { pdfFile: null, pdfNotMergedList: [] }\r\n\r\n    if (pdfFileList.length > 0) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onload = function(evt) { console.log(evt.target.result); };\r\n\r\n\t\tconst pdfDoc = PDFDocumentFactory.create();\r\n\t\tlet iterPdfDoc = PDFDocumentFactory.create();\r\n\t\t// let iterPdfDocBytes;\r\n\t\tlet pdfFilePromiseArrayBufferList = [];\r\n\t\tlet pdfNotMergedList = [];\r\n\t\tlet iterPdfDocPages = [];\r\n\r\n\t\t// Get all file URLs into a list using Promises and fetch API\r\n\t\tpdfFileList.forEach((pdfFile) => {\r\n\t\t\t// console.log(pdfFile)\r\n\t\t\tpdfFilePromiseArrayBufferList.push(\r\n\t\t\t\tfetch(URL.createObjectURL(pdfFile))\r\n\t\t\t\t\t.then(res => res.arrayBuffer())\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\treturn Promise\r\n\t\t\t.all(pdfFilePromiseArrayBufferList)\r\n\t\t\t.then((pdfArrayBufferFileList) => {\r\n\t\t\t\tfor (let i = 0; i < pdfArrayBufferFileList.length; i++) {\r\n\t\t\t\t\t// console.log(pdfArrayBufferFileList[i])\r\n\t\t\t\t\t// iterPdfDocBytes = reader.readAsArrayBuffer(pdfBlob)\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\titerPdfDoc = PDFDocumentFactory.load(new Uint8Array(pdfArrayBufferFileList[i]))\r\n\t\t\t\t\t\titerPdfDocPages = iterPdfDoc.getPages()\r\n\t\t\t\t\t\titerPdfDoc = PDFDocumentFactory.create();\r\n\t\t\t\t\t\t// Add each page in a temp file to check if all pages from this PDF can be added in the final one\r\n\t\t\t\t\t\titerPdfDocPages.forEach((pdfPage) => {\r\n\t\t\t\t\t\t\titerPdfDoc.addPage(pdfPage)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t// No errors? Then add all pages to the final PDF\r\n\t\t\t\t\t\titerPdfDocPages.forEach((pdfPage) => {\r\n\t\t\t\t\t\t\tpdfDoc.addPage(pdfPage)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t\t\t// console.log(\"File \" + pdfFileList[i].name + \" not merged due to the following error: \" + err.message)\r\n\t\t\t\t\t\tpdfNotMergedList.push(pdfFileList[i].name)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturnObj.pdfFile = PDFDocumentWriter.saveToBytes(pdfDoc)\r\n\t\t\t\treturnObj.pdfNotMergedList = pdfNotMergedList\r\n\t\t\t\treturn returnObj\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\treturnObj.pdfFile = null\r\n\t\t\t\treturnObj.pdfNotMergedList = pdfNotMergedList\r\n\t\t\t\treturn returnObj\r\n\t\t\t})\r\n    }\r\n}\r\n\r\nexport default {\r\n\tmergeBetweenPDF\r\n}\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Files from 'react-files';\r\nimport ModalLoadingAlert from '../ModalLoadingAlert';\r\nimport PDFProvider from '../../../lib/provider/pdfProvider';\r\nimport { saveSync } from 'save-file'\r\n\r\nclass FilesDragDrop extends Component {\r\n  state = {\r\n\t  files: [],\r\n\t  hasFiles: false,\r\n\t  modalOpen: false,\r\n\t  modalLoading: false,\r\n\t  modalMsg: {\r\n\t\t  err: null,\r\n\t\t  success: null\r\n\t  }\r\n  }\r\n\r\n  onFilesChange = (files) => {\r\n      this.setState({\r\n          files,\r\n\t\t  hasFiles: files.length > 0 ? true : false\r\n      }, () => {\r\n          // console.log(this.state)\r\n      })\r\n\r\n      // this.setState({value: event.target.value}, function () {\r\n      //     console.log(this.state.value);\r\n      // });\r\n  }\r\n\r\n  onFilesError = (error, file) => {\r\n      console.log('[LOG] Error code ' + error.code + ': ' + error.message)\r\n  }\r\n\r\n  filesRemoveOne = (file) => {\r\n      this.refs.files.removeFile(file)\r\n  }\r\n\r\n  filesClearAndRemoveAll = () => {\r\n      this.setState({\r\n\t\t  modalOpen: false,\r\n\t\t  modalLoading: false,\r\n\t\t  modalMsg: {\r\n\t\t\t  err: null,\r\n\t\t\t  success: null\r\n\t\t  }\r\n      }, () => {\r\n\t\t  this.filesRemoveAll()\r\n      })\r\n  }\r\n\r\n  filesRemoveAll = () => {\r\n      this.setState({\r\n          files: [],\r\n\t\t  hasFiles: false\r\n      }, () => {\r\n\t\t  this.refs.files.removeFiles()\r\n      })\r\n  }\r\n\r\n  startMerge = () => {\r\n\t  let tempMsg\r\n\t  this.setState({\r\n          files: this.state.files,\r\n\t\t  hasFiles: false,\r\n\t\t  modalOpen: true,\r\n\t\t  modalLoading: true\r\n      }, () => {\r\n\t\t  // this.refs.modal.handleOpen()\r\n          console.log(\"[LOG] Starting merge...\")\r\n      })\r\n\r\n\t  PDFProvider.mergeBetweenPDF(this.state.files)\r\n\t  \t.then((res) => {\r\n\t\t\t// console.log(res)\r\n\t\t\tif (res && res.hasOwnProperty(\"pdfFile\")) {\r\n\t\t\t\tif (res.pdfFile) {\r\n\t\t\t\t\tif (res.pdfNotMergedList.length !== this.state.files.length) {\r\n\t\t\t\t\t\tconst fileName = \"output_merge_\" + new Date().toISOString().replace(\":\",\"_\").replace(\"T\",\"_\").replace(\"Z\",\"\") + \".pdf\"\r\n\t\t\t\t\t\tsaveSync(res.pdfFile, fileName)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (res.pdfNotMergedList.length > 0) {\r\n\t\t\t\t\t\tif (res.pdfNotMergedList.length > 0 && res.pdfNotMergedList.length === this.state.files.length) {\r\n\t\t\t\t\t\t\ttempMsg = \"No merge PDF output could be done. Following files have problem and need to be merged manually: \" + res.pdfNotMergedList.join(\", \")\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttempMsg = \"Following files have problem and need to be merged manually: \" + res.pdfNotMergedList.join(\", \")\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconsole.log(\"[LOG] \" + tempMsg)\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  \t\tmodalOpen: true,\r\n\t\t\t\t\t  \t\tmodalLoading: false,\r\n\t\t\t\t\t\t\tmodalMsg: {\r\n\t\t\t\t\t\t\t\terr: tempMsg,\r\n\t\t\t\t\t\t\t\tsuccess: null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t        }, () => { console.log(\"[LOG] Modal closed.\") })\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttempMsg = \"Merge totally successfull and downloaded!\"\r\n\t\t\t\t\t\tconsole.log(\"[LOG] \" + tempMsg)\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  \t\tmodalOpen: true,\r\n\t\t\t\t\t  \t\tmodalLoading: false,\r\n\t\t\t\t\t\t\tmodalMsg: {\r\n\t\t\t\t\t\t\t\terr: null,\r\n\t\t\t\t\t\t\t\tsuccess: tempMsg\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t        }, () => { console.log(\"[LOG] Closed modal\") })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttempMsg = \"Internal error at merging! Send this error to the developer in charge.\"\r\n\t\t\t\tconsole.log(tempMsg)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmodalOpen: true,\r\n\t\t\t\t\tmodalLoading: false,\r\n\t\t\t\t\tmodalMsg: {\r\n\t\t\t\t\t\terr: tempMsg,\r\n\t\t\t\t\t\tsuccess: null\r\n\t\t\t\t\t}\r\n\t\t\t\t}, () => { console.log(\"[LOG] Closed modal\") })\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(\"[LOG] \" + err)\r\n\t\t})\r\n\t\t.finally(() => this.filesRemoveAll())\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className=\"files\">\r\n        <Grid container spacing={32} justify=\"center\">\r\n          <Grid item className={classes.dropFilesGridZone}>\r\n            <Files\r\n\t\t\t  \t\t\tref='files'\r\n              className={classes.dropFilesZone}\r\n              onChange={this.onFilesChange}\r\n              onError={this.onFilesError}\r\n              accepts={['.pdf']}\r\n              multiple\r\n              maxFiles={1000}\r\n              maxFileSize={10000000}\r\n              minFileSize={0}\r\n              clickable\r\n            >\r\n              <div className={classes.dropFilesZoneDiv}>Drop files here or click to upload</div>\r\n            </Files>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={32} justify=\"center\">\r\n          {\r\n            this.state.files.length > 0\r\n            ?\r\n\t\t\t\t\t\t\t<Grid item className={classes.dropFilesGridZone}>\r\n\t\t\t\t\t\t\t\t<div className='files-list'>\r\n\t\t\t\t\t\t\t\t\t<ul>{this.state.files.map((file) =>\r\n\t\t\t\t\t\t\t\t\t\t<li className='files-list-item' key={file.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='files-list-item-content'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='files-list-item-content-item files-list-item-content-item-1'>{file.name}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='files-list-item-content-item files-list-item-content-item-2'>{file.sizeReadable}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tid={file.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='files-list-item-remove'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.filesRemoveOne.bind(this, file)} // eslint-disable-line\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t)}</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n            :\r\n\t\t\t\t\t\t\t<Grid item className={classes.dropFilesWarningGridZone}>\r\n\t\t\t\t\t\t\t\t<div className='files-list'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tNo files selected!\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n          }\r\n        </Grid>\r\n\r\n        <Grid container spacing={16} justify=\"center\">\r\n\t        <Grid item>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\"\r\n\t\t\t\t\t\t\tdisabled={!this.state.hasFiles}\r\n\t\t\t\t\t\t\tonClick={this.startMerge}>\r\n\t\t\t\t\t\t\tStart merge\r\n\t\t\t\t\t\t</Button>\r\n\t        </Grid>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" color=\"secondary\" onClick={this.filesClearAndRemoveAll}>\r\n\t\t\t\t\t\t\t\tClear selection\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n        </Grid>\r\n\r\n\t\t\t\t<ModalLoadingAlert\r\n\t\t\t\t\tisOpen={this.state.modalOpen}\r\n\t\t\t\t\tisLoading={this.state.modalLoading}\r\n\t\t\t\t\tmsg={this.state.modalMsg}\r\n\t\t\t\t\tclearModalStatus={this.filesClearAndRemoveAll} />\r\n\t\t\t</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n\tdropFilesGridZone: {\r\n\t\twidth: '70%'\r\n\t},\r\n\tdropFilesZone: {\r\n\t\tpadding: '2em',\r\n\t\tborder: '2px dashed rgba(0, 0, 0, .1)',\r\n\t\tcolor: 'rgba(0, 0, 0, .4)',\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\tboxSizing: 'border-box',\r\n\t\ttextAlign: 'center'\r\n\t},\r\n\tdropFilesZoneDiv: {\r\n\t\twidth: '100%'\r\n\t},\r\n\tdropFilesWarningGridZone: {\r\n\t\twidth: '70%',\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: 'red',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles, { name: 'MuiFilesDragDrop' })(FilesDragDrop);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FilesDragDrop from '../../organism/FilesDragDrop';\r\n\r\nconst Home = props => {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            KAWASAKI APP\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroUnit}>\r\n          <div className={classes.heroContent}>\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n              Merge your PDFs\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <FilesDragDrop>\r\n              </FilesDragDrop>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n  heroUnit: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  heroContent: {\r\n    maxWidth: 600,\r\n    margin: '0 auto',\r\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing.unit * 4,\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  cardGrid: {\r\n    padding: `${theme.spacing.unit * 8}px 0`,\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing.unit * 6,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Home);\r\n","import React from 'react';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport theme from './config/theme';\r\nimport Home from './components/pages/Home'\r\n\r\nconst App = () => {\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <CssBaseline/>\r\n            <Home/>\r\n        </MuiThemeProvider>\r\n    );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}